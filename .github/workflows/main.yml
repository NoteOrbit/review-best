name: "Terraform Databricks Pipeline"

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    # 1. Set environment variables for the entire job
    env:
      DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
      # NOTE: Using a Service Principal is recommended over a token for production
      # ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      # ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      # ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      # ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    defaults:
      run:
        # Set a default working directory for all run commands
        working-directory: ./infra/terraform

    steps:
      - name: Checkout code
        # 3. Use the latest version of the action
        uses: actions/checkout@v4

      - name: Set up Terraform
        # 3. Use the latest version of the action
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      # 2. Add a plan step for better auditing
      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan